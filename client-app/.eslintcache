[{"D:\\Reactivities\\client-app\\src\\reportWebVitals.ts":"1","D:\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"2","D:\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"3","D:\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"4","D:\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"5","D:\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"6","D:\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"7","D:\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"8","D:\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":3099,"mtime":1608500532136,"results":"12","hashOfConfig":"11"},{"size":752,"mtime":1608390422746,"results":"13","hashOfConfig":"11"},{"size":2009,"mtime":1608500860648,"results":"14","hashOfConfig":"11"},{"size":1806,"mtime":1608500826428,"results":"15","hashOfConfig":"11"},{"size":1267,"mtime":1608477855865,"results":"16","hashOfConfig":"11"},{"size":2895,"mtime":1608499660731,"results":"17","hashOfConfig":"11"},{"size":1177,"mtime":1608497842757,"results":"18","hashOfConfig":"11"},{"size":362,"mtime":1608499009608,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ypneme",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"D:\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"D:\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"D:\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"D:\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["40"],"import React, { SyntheticEvent } from \"react\";\r\nimport { Item, Image, Button, Label, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n  activities: IActivity[];\r\n  selectActivity: (id: string) => void;\r\n  deleteActivity: (event: SyntheticEvent<HTMLButtonElement>, id: string) => void;\r\n  submitting: boolean\r\n  target: string\r\n}\r\n\r\nexport const ActivityList: React.FC<IProps> = ({\r\n  activities,\r\n  selectActivity,\r\n  deleteActivity,\r\n  submitting,\r\n  target\r\n}) => {\r\n  return (\r\n    <Segment clearing>\r\n      <Item.Group divided>\r\n        {activities.map((activity) => (\r\n          <Item Key={activity.id}>\r\n            <Item.Content>\r\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\r\n              <Item.Meta>{activity.date}</Item.Meta>\r\n              <Item.Description>\r\n                <div>{activity.description}</div>\r\n                <div>\r\n                  {activity.city}, {activity.venue}\r\n                </div>\r\n              </Item.Description>\r\n              <Item.Extra>\r\n                <Button\r\n                  onClick={() => selectActivity(activity.id)}\r\n                  floated=\"right\"\r\n                  content=\"View\"\r\n                  color=\"blue\"\r\n                />\r\n                <Button\r\n                  name={activity.id}\r\n                  loading={target === activity.id && submitting}\r\n                  onClick={(e) => deleteActivity(e, activity.id)}\r\n                  floated=\"right\"\r\n                  content=\"delete\"\r\n                  color=\"red\"\r\n                />\r\n                <Label basic content={activity.category}></Label>\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n","D:\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"D:\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"D:\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["41"],"import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity } from '../models/activity';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms))\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst Activities ={\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post(`/activities`, activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/activities/${id}`)\r\n}\r\n\r\nexport default {\r\n    Activities\r\n}","D:\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],{"ruleId":"42","severity":1,"message":"43","line":2,"column":16,"nodeType":"44","messageId":"45","endLine":2,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":26,"column":1,"nodeType":"48","endLine":28,"endColumn":2},"@typescript-eslint/no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]